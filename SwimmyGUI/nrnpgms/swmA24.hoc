




load_file("$(NEURONHOME)/lib/hoc/nrngui.hoc")
xopen("./cellsIAFf.template")			
dt=0.1
tstop = 30  
runStopAt = tstop
steps_per_ms = 10
celsius = 10     
v_init = -85  





objref vec1, vec2, vec3,smallvec1,smallvec2,spkvec1,spkvec2,sumvec1,sumvec2,accum1,accum2,diffvec,roughvec
vec1=new Vector()
vec2=new Vector()
vec3= new Vector(1,0)
smallvec1=new Vector(500,0)
smallvec2=new Vector(500,0)
spkvec1=new Vector()
spkvec2=new  Vector()
sumvec1 = new Vector(5000,0)
sumvec2= new Vector(5000,0)
accum1= new Vector(5000,0)
accum2=new Vector(5000,0)
diffvec= new Vector(500,0)
roughvec=new Vector(500,0)
n=0
a=0
b=0



syndelay=1

create soma  


access soma
insert pas
g_pas=.01
e_pas=0 


objectvar cell0, cell1, cell2, cell3, cell4, cell5,  cell6, cell7, cell8, cell9, cell16, cell15, cell19, cell18, cell20, cell12, cell21, cell24, cell10, cell11, cell13, cell25, cell14, cell23, cell17, cell22, cell26








cell0=new fSoma()





cell1= new fSoma()  
access cell1.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.5  
Delay_EPlasSomf = syndelay

cell2= new fSoma()  
access cell2.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.5  
Delay_EPlasSomf = syndelay




cell3= new fSoma()  
    
access cell3.soma
insert hhca1  
el_hhca1=-85
ek_hhca1=-90



trec_EPlasSomf=0
tfac_EPlasSomf=500
Beta_1_EPlasSomf=.2  
Delay_EPlasSomf = syndelay


cell4= new fSoma()  
access cell4.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90

cell5= new fSoma() 
access cell5.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=500
Beta_1_EPlasSomf=.2  
Delay_EPlasSomf = syndelay

cell6= new fSoma()  
access cell6.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.15  
Delay_EPlasSomf = syndelay

cell7= new fSoma()  
access cell7.soma
insert hhca1
el_hhca1=200
ek_hhca1=-90
gl_hca1=.0001
trec_EPlasSomf=0
Beta_1_EPlasSomf=.2  
Delay_EPlasSomf = syndelay

cell8= new fSoma()  
access cell8.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.2  
Delay_EPlasSomf = syndelay

cell9= new fSoma()  
access cell9.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.2  

cell26= new fSoma()  
access cell26.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.2  



cell16= new fSoma()
access cell16.soma
insert hhca1  
el_hhca1=200
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.15  
                      
insert pacef
a_pacef=.3     
b_pacef=.002  
c0_pacef=0
g0_pacef=0
Delay_EPlasSomf = syndelay

cell15= new fSoma()  
access cell15.soma
insert hhca1
el_hhca1= 200     
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.15 
insert pacef
a_pacef=.3
b_pacef=.002
c0_pacef=0
g0_pacef=.1  
Delay_EPlasSomf = syndelay

cell19= new fSoma()  
access cell19.soma
insert hhca1
el_hhca1=200
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.5  
Delay_EPlasSomf = syndelay

cell18= new fSoma()  
access cell18.soma
insert hhca1
el_hhca1=200
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.5  
Delay_EPlasSomf = syndelay


cell20= new fSoma()  
access cell20.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.2  
Delay_EPlasSomf = syndelay

cell12= new fSoma()  
access cell12.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90
trec_EPlasSomf=0
Beta_1_EPlasSomf=.2  
Delay_EPlasSomf = syndelay


cell21= new fSoma()
access cell21.soma
insert hhca1  
el_hhca1=200
ek_hhca1=-90
insert pacef
a_pacef=2     
b_pacef=.0005  
c0_pacef=0
g0_pacef=0

cell24= new fSoma()
access cell24.soma
insert hhca1  
el_hhca1=-20
ek_hhca1=-90
insert pacef
a_pacef=.1     
b_pacef=.0005  
c0_pacef=0
g0_pacef=0

cell10= new fSoma()
access cell10.soma
insert hhca1  
el_hhca1=-20
ek_hhca1=-90
insert pacef
a_pacef= 1    
b_pacef=.005 
c0_pacef=0
g0_pacef=0


cell11= new fSoma() 
access cell11.soma
insert hhca1  
el_hhca1=-20
ek_hhca1=-90
insert pacef
a_pacef= 2    
b_pacef=.0008 
c0_pacef=0
g0_pacef=0

cell13= new fSoma()  
access cell13.soma
insert hhca1
el_hhca1=200
ek_hhca1=-90
gl_hhca1=.0001

cell25= new fSoma()  
access cell25.soma
insert hhca1
el_hhca1=200
ek_hhca1=-90
gl_hhca1=.00002

cell14= new fSoma()  
access cell14.soma
insert hhca1
el_hhca1=-60
ek_hhca1=-90


cell23= new fSoma()  
access cell23.soma
insert hhca1
el_hhca1=-85
ek_hhca1=-90


cell17= new fSoma()  
access cell17.soma
insert hhca1
el_hhca1=-70
ek_hhca1=-90


cell22= new fSoma()  
access cell22.soma
insert hhca1
el_hhca1=-80
ek_hhca1=-90



gONconst_ExIAF=0  
        

gOFFconst_ExIAF=0



proc makesyn() {    
                    
$o1 = new EPlasSynf()
$o3.soma $o1.loc(0.5)
setpointer $o1.ampa, $o2.soma.ampa_EPlasSomf
setpointer $o1.nmda, $o2.soma.nmda_EPlasSomf
setpointer $o1.lastprespike, $o2.soma.lastspike_EPlasSomf
setpointer $o1.Gain, $o3.soma.Gain_ExIAF
setpointer $o1.ScaleFactor, $o3.soma.ScaleFactor_ExIAF
setpointer $o1.Induction, $o3.soma.Induction_ExIAF
setpointer $o1.lastpostspike, $o3.soma.lastspike_EPlasSomf
$o1.scale=0
$o1.gmaxNMDA=0  
$o1.gmaxAMPA=.0005  


}

objectvar syn[30]  



makesyn(syn[0],cell16, cell15)  
syn[0].Erev_1= -90
syn[0].gmaxAMPA=.7  

makesyn(syn[1], cell15, cell16)  
syn[1].Erev_1= -90
syn[1].gmaxAMPA=.7

makesyn(syn[2], cell16, cell19)   
syn[2].Erev_1= -90
syn[2].gmaxAMPA= 1.5   

makesyn(syn[3], cell15, cell18)   
syn[3].Erev_1= -90
syn[3].gmaxAMPA= 1.5

makesyn(syn[4], cell19, cell1)   
syn[4].Erev_1=0
syn[4].gmaxAMPA= .33  
                     

makesyn(syn[5], cell18, cell2)  
syn[5].Erev_1=0
syn[5].gmaxAMPA= .33  
                     


makesyn(syn[6], cell1, cell20)   
syn[6].Erev_1= 0
syn[6].gmaxAMPA=.33  
                     
                     

makesyn(syn[7], cell2, cell12)   
syn[7].Erev_1= 0
syn[7].gmaxAMPA=.33

makesyn(syn[8], cell20, cell2)   
syn[8].Erev_1= -90
syn[8].gmaxAMPA=.5

makesyn(syn[9], cell12, cell1)   
syn[9].Erev_1= -90
syn[9].gmaxAMPA=.5



makesyn(syn[10], cell3, cell4)  
syn[10].gmaxAMPA = .04   
                         
syn[10].Erev_1=0  

makesyn(syn[11], cell5, cell4)  
syn[11].gmaxAMPA=.04
syn[11].Erev_1=0

makesyn(syn[12], cell6, cell4)  
syn[12].gmaxAMPA=.08  
syn[12].Erev_1=-95   

makesyn(syn[13], cell7, cell8)  
syn[13].gmaxAMPA= .5  
                     
syn[13].Erev_1=0


makesyn(syn[14], cell8, cell9)  
syn[14].gmaxAMPA=.5  
syn[14].Erev_1=0

makesyn(syn[15], cell7, cell26)  
syn[15].gmaxAMPA= .5  
                     
syn[15].Erev_1=0

access soma  


objectvar s
proc stim(){  
access $o1.soma 
s= new PointProcessManager()
access soma
}




access cell19.soma  
objectvar startstim
startstim = new IClamp(0.5)
startstim.del= 0
startstim.dur=10 
startstim.amp=-10
access soma






proc run(){
  running = 1
  stdinit()
  continuerun(tstop)
  saveme()
}


objref grph1, grph2, grph3








objref nsave, diffsave  
nsave=new File()
diffsave=new File()




a1=40   
b1=.005  
a2=40     
b2=.005    

vec1.record(&cell1.soma.v(.5))
vec2.record(&cell2.soma.v(.5))
proc saveme()  {
	spkvec1.spikebin(vec1,-5)
	spkvec2.spikebin(vec2,-5)
	sumvec1.fill(0)
	sumvec2.fill(0)
	smallvec1.fill(0)
	smallvec2.fill(0)
	diffvec.fill(0)
	roughvec.fill(0)

	for i=2, 4999 {
		sumvec1.x[i]= sumvec1.x[i-1] + a1 * spkvec1.x[i] - b1 * sumvec1.x[i-1]
		sumvec2.x[i]= sumvec2.x[i-1] + a2 * spkvec2.x[i] - b2 * sumvec2.x[i-1]
	}

	for i=c+1 , 4999 {
		accum1.x[i]=sumvec1.mean(i-c,i)
		accum2.x[i]=sumvec2.mean(i-c,i)
	}	
	
	for i=1, 499 {
		smallvec1.x[i]=sumvec1.mean(10*i -9, 10*i)
		smallvec2.x[i]=sumvec2.mean(10*i -9, 10*i)
		roughvec.x[i]=smallvec1.x[i]-smallvec2.x[i]
	}
	c=10
	for i=c+1, 499 {
		diffvec.x[i]=roughvec.mean(i-c, i)
	}









	diffsave.wopen("c:/temp/diff.dat")
        
	

	diffvec.printf(diffsave)
        
	
	
          diffsave.close()
	
}




/*
Note: As graphs are made they are given a unique number and placed on graphList[0] which was created somewhere that I have not identified.   The program does not seem to recongize items not on that list.  If one removes an item from the list, then it is no longer recognized even though it was created.  I don't understand that, but there it is.  If one repeats the procedure while the list is intact, it apppears to make new graph numbers but the existing graphs stay on the list unless one removes them first in which case they are replaced by new numbrers.  Only graph names on the list or the most recently made graph even if not on the list is recognized.  If a graph is recognized it can be displayed using a .view() statement.

If we erase the list contents, then only graphs that are appended to the list get added to the list and get displayed.

Suppose we remove all writing to the list and we try to display graphs with view statements as they are made.  What happens? They vanish as soon as save_window_ is redefined.

*/

progtype=1  



strdef str0, str1, str2, str3, str4, str5, str6,st0,st1,st2,st3,st4,st5,st6,st7,st8
objectvar obj0, stimgui[200],eightgrphs
objectvar grph1,grph2,grph3,grph4,grph5,grph6,grph7,grph8 
                             
m=0  
eightgrphs = new Vector(27)



 xopen("$(NEURONHOME)/nrnpgms/class2.ses")  


xpanel("Swimmy Stuff",1)
  xmenu("Make Stim","makestimbuttons()")
  xmenu("Make Record","makerecordbuttons()")
  xbutton("8 Windows","make8windowspanel()")
  xbutton("Station","namestation()")
xpanel()


print "SWIMMY was created by Dr. Franklin B. Krasne and programmed in Neuron (http:/ /www.neuron.yale.edu/neuron/)."   

print "This work is licensed under the Creative Commons Attribution-Noncommercial-No Derivative Works 3.0"
print "United States License. To view a copy of this license, visit"
print "http:/ /creativecommons.org/licenses/by-nc-nd/3.0/us/ or send a letter to"
print "Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA."
print "   "




proc make8windowspanel(){local j
  xpanel("8 windows")
  xlabel("Enter 1 for up to 8 cells you wish to graph. Then hit MAKE GRAPHS")
  xlabel("You may close this window when done.")
  
  eightgrphs.x[1]=1
  eightgrphs.x[2]=1

  if (progtype==1) {
    
    for j=1,26 {
      sprint(str1,"cell %d",j)
      sprint(str2,"eightgrphs.x[%d]",j)
      xvalue(str1,str2)
    }
    
  }  else  {

    
    for j=1,26 {
      if (j<=9) {sprint(str1,"cell %d",j)} else {
        converter(j)  
        str1=st0
      }
      sprint(str2,"eightgrphs.x[%d]",j)
      xvalue(str1,str2)
    }
    
  }

  xbutton("MAKE GRAPHS","make8graphs()")

  xpanel()
}  



proc make8graphs(){local j


  k=0
  for j=1, 26 {
    if (eightgrphs.x[j]==1) {
      k=k+1

             
      if (progtype==0){
      
      if(k==1){
        if (j<=9) {sprint(st1,"cell%d.soma.v(.5)",j)} else {  
          converter(j)
          sprint(st1,"%s.soma.v(.5)",st0)}} 
      if(k==2){
        if (j<=9) {sprint(st2,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st2,"%s.soma.v(.5)",st0)}}
      if(k==3){
        if (j<=9) {sprint(st3,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st3,"%s.soma.v(.5)",st0)}}
      if(k==4){
        if (j<=9) {sprint(st4,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st4,"%s.soma.v(.5)",st0)}}
      if(k==5){
        if (j<=9) {sprint(st5,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st5,"%s.soma.v(.5)",st0)}} 
      if(k==6){
        if (j<=9) {sprint(st6,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st6,"%s.soma.v(.5)",st0)}}
      if(k==7){
        if (j<=9) {sprint(st7,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st7,"%s.soma.v(.5)",st0)}} 
      if(k==8){
        if (j<=9) {sprint(st8,"cell%d.soma.v(.5)",j)} else {
          converter(j)
          sprint(st8,"%s.soma.v(.5)",st0)}}
       
       }  else  {    

      
      if(k==1){sprint(st1,"cell%d.soma.v(.5)",j)}
      if(k==2){sprint(st2,"cell%d.soma.v(.5)",j)}
      if(k==3){sprint(st3,"cell%d.soma.v(.5)",j)}
      if(k==4){sprint(st4,"cell%d.soma.v(.5)",j)}  
      if(k==5){sprint(st5,"cell%d.soma.v(.5)",j)}
      if(k==6){sprint(st6,"cell%d.soma.v(.5)",j)}
      if(k==7){sprint(st7,"cell%d.soma.v(.5)",j)}
      if(k==8){sprint(st8,"cell%d.soma.v(.5)",j)}
      
     
     } 
    }  
  }   


{
grph1 = new Graph(0)
save_window_.size(100,300,-80,40)
{grph1.view(100, -80, 200, 120, 2, 670, 457.2, 35.2)}
graphList[0].append(grph1)
if (strcmp(st8,"") != 0) {grph1.addexpr(st8, 1, 1, 0.8, 0.9, 2)}
}
{
grph2 = new Graph(0)
grph2.size(100,300,-80,40)
{grph2.view(100, -80, 200, 120, 6, 590, 455.4, 48)}
graphList[0].append(grph2)
if (strcmp(st7,"") != 0) {grph2.addexpr(st7, 1, 1, 0.8, 0.9, 2)}
}
{
grph3 = new Graph(0)
grph3.size(100,300,-80,40)
{grph3.view(100, -80, 200, 120, 3, 510, 455.4, 48)}
graphList[0].append(grph3)
if (strcmp(st6,"") != 0) {grph3.addexpr(st6, 1, 1, 0.8, 0.9, 2)}
}
{
grph4 = new Graph(0)
grph4.size(100,300,-80,40)
{grph4.view(100, -80, 200, 120, 6, 430, 453.6, 48)}
graphList[0].append(grph4)
if (strcmp(st5,"") != 0) {grph4.addexpr(st5, 1, 1, 0.8, 0.9, 2)}
}
{
grph5 = new Graph(0)
grph5.size(100,300,-80,40)
{grph5.view(100, -80, 200, 120, 7, 350, 451.8, 48)}
graphList[0].append(grph5)
if (strcmp(st4,"") != 0) {grph5.addexpr(st4, 1, 1, 0.8, 0.9, 2)}
}


{
grph6 = new Graph(0)
grph6.size(100,300,-80,40)
{grph6.view(100, -80, 200, 120, 6, 270, 452.7, 48)}
graphList[0].append(grph6)
if (strcmp(st3,"") != 0) {grph6.addexpr(st3, 1, 1, 0.8, 0.9, 2)}
}

{
grph7 = new Graph(0)
grph7.size(100,300,-80,40)
{grph7.view(100, -80, 200, 120, 7, 190, 450.9, 48)}
graphList[0].append(grph7)
if (strcmp(st2,"") != 0) {grph7.addexpr(st2, 1, 1, 0.8, 0.9, 2)}
}

{
grph8 = new Graph(0)
grph8.size(100,300,-80,40)
{grph8.view(100, -80, 200, 120, 8, 110, 450, 48)}
graphList[0].append(grph8)
if (strcmp(st1,"") != 0) {grph8.addexpr(st1, 1, 1, 0.8, 0.9, 2)}
}

} 




proc converter(){local j
j=$1
if (j==10) {st0="cella"}
if (j==11) {st0="cellb"}
if (j==12) {st0="cellc"}
if (j==13) {st0="celld"}
if (j==14) {st0="celle"}
if (j==15) {st0="cellf"}
if (j==16) {st0="cellg"}
if (j==17) {st0="cellh"}
if (j==18) {st0="celli"}
if (j==19) {st0="cellj"}
if (j==20) {st0="cellk"}
if (j==21) {st0="celll"}
if (j==22) {st0="cellm"}
if (j==23) {st0="celln"}
if (j==24) {st0="cello"}
if (j==25) {st0="cellp"}

}





proc makestimbuttons(){local j


if (progtype==1){ 
 for j=1 ,26 {             
  sprint(str1, "cell %d",j)
  sprint(str2, "makeiclamp(\"cell %d\")",j)  
  xbutton(str1,str2)  
                               
                               
     
  }
} else {
 for j=1 ,9 {             
  sprint(str1, "cell %d",j)
  sprint(str2, "makeiclamp(\"cell %d\")",j)  
  xbutton(str1,str2)  
                               
                               
     
  }

 for j=26, 26 {             
  sprint(str1, "cell %d",j)
  sprint(str2, "makeiclamp(\"cell %d\")",j)  
  xbutton(str1,str2) }

    str1="cell a"
    str2="makeiclamp(\"cell a\")"
    xbutton(str1,str2) 

    str1="cell b"
    str2="makeiclamp(\"cell b\")"
    xbutton(str1,str2)

    str1="cell c"
    str2="makeiclamp(\"cell c\")"
    xbutton(str1,str2)
 
    str1="cell d"
    str2="makeiclamp(\"cell d\")"
    xbutton(str1,str2) 

    str1="cell e"
    str2="makeiclamp(\"cell e\")"
    xbutton(str1,str2) 

    str1="cell f"
    str2="makeiclamp(\"cell f\")"
    xbutton(str1,str2) 

    str1="cell g"
    str2="makeiclamp(\"cell g\")"
    xbutton(str1,str2) 

    str1="cell h"
    str2="makeiclamp(\"cell h\")"
    xbutton(str1,str2) 
    
 
    str1="cell i"
    str2="makeiclamp(\"cell i\")"
    xbutton(str1,str2) 

    str1="cell j"
    str2="makeiclamp(\"cell j\")"
    xbutton(str1,str2) 

   
    str1="cell k"
    str2="makeiclamp(\"cell k\")"
    xbutton(str1,str2) 

    str1="cell l"
    str2="makeiclamp(\"cell l\")"
    xbutton(str1,str2) 

    str1="cell m"
    str2="makeiclamp(\"cell m\")"
    xbutton(str1,str2) 

    str1="cell n"
    str2="makeiclamp(\"cell n\")"
    xbutton(str1,str2) 

    str1="cell o"
    str2="makeiclamp(\"cell o\")"
    xbutton(str1,str2)

    str1="cell p"
    str2="makeiclamp(\"cell p\")"
    xbutton(str1,str2) 
} 
}


proc makerecordbuttons(){local j

if (progtype==1){
for j=1 ,26 {
  sprint(str1, "cell %d",j)
  sprint(str2, "makegraph(\"cell%d.soma.v(.5)\")",j)  
  xbutton(str1,str2)  
                               
                               
 } 
}else {


for j=1 ,9 {
  sprint(str1, "cell %d",j)
  sprint(str2, "makegraph(\"cell%d.soma.v(.5)\")",j)  
  xbutton(str1,str2)  
                               
                               
  }


for j=26, 26 {
  sprint(str1, "cell %d",j)
  sprint(str2, "makegraph(\"cell%d.soma.v(.5)\")",j)  
  xbutton(str1,str2)  
                               
                               
  }



   xbutton("cell a","makegraph(\"cella.soma.v(.5)\")")
   xbutton("cell b","makegraph(\"cellb.soma.v(.5)\")")
   xbutton("cell c","makegraph(\"cellc.soma.v(.5)\")")
   xbutton("cell d","makegraph(\"celld.soma.v(.5)\")")
   xbutton("cell e","makegraph(\"celle.soma.v(.5)\")")
   xbutton("cell f","makegraph(\"cellf.soma.v(.5)\")")
   xbutton("cell g","makegraph(\"cellg.soma.v(.5)\")")
   xbutton("cell h","makegraph(\"cellh.soma.v(.5)\")")
   xbutton("cell i","makegraph(\"celli.soma.v(.5)\")")
   xbutton("cell j","makegraph(\"cellj.soma.v(.5)\")")
   xbutton("cell k","makegraph(\"cellk.soma.v(.5)\")")
   xbutton("cell l","makegraph(\"celll.soma.v(.5)\")")
   xbutton("cell m","makegraph(\"cellm.soma.v(.5)\")")
   xbutton("cell n","makegraph(\"celln.soma.v(.5)\")")
   xbutton("cell o","makegraph(\"cello.soma.v(.5)\")")
   xbutton("cell p","makegraph(\"cellp.soma.v(.5)\")")  
  
}  





 }  

proc cellobjname() {
str0= $s1
if (strcmp(str0,"cell 1")==0)  obj0=cell1
if (strcmp(str0,"cell 2")==0)  obj0=cell2
if (strcmp(str0,"cell 3")==0)  obj0=cell3
if (strcmp(str0,"cell 4")==0)  obj0=cell4
if (strcmp(str0,"cell 5")==0)  obj0=cell5
if (strcmp(str0,"cell 6")==0)  obj0=cell6
if (strcmp(str0,"cell 7")==0)  obj0=cell7
if (strcmp(str0,"cell 8")==0)  obj0=cell8
if (strcmp(str0,"cell 9")==0)  obj0=cell9
if (strcmp(str0,"cell 10")==0)  obj0=cell10
if (strcmp(str0,"cell 11")==0)  obj0=cell11
if (strcmp(str0,"cell 12")==0)  obj0=cell12
if (strcmp(str0,"cell 13")==0)  obj0=cell13
if (strcmp(str0,"cell 14")==0)  obj0=cell14
if (strcmp(str0,"cell 15")==0)  obj0=cell15
if (strcmp(str0,"cell 16")==0)  obj0=cell16
if (strcmp(str0,"cell 17")==0)  obj0=cell17
if (strcmp(str0,"cell 18")==0)  obj0=cell18
if (strcmp(str0,"cell 19")==0)  obj0=cell19
if (strcmp(str0,"cell 20")==0)  obj0=cell20
if (strcmp(str0,"cell 21")==0)  obj0=cell21
if (strcmp(str0,"cell 22")==0)  obj0=cell22
if (strcmp(str0,"cell 23")==0)  obj0=cell23
if (strcmp(str0,"cell 24")==0)  obj0=cell24
if (strcmp(str0,"cell 25")==0)  obj0=cell25
if (strcmp(str0,"cell 26")==0)  obj0=cell26
if (strcmp(str0,"cell a")==0)  obj0=cella
if (strcmp(str0,"cell b")==0)  obj0=cellb
if (strcmp(str0,"cell c")==0)  obj0=cellc
if (strcmp(str0,"cell d")==0)  obj0=celld
if (strcmp(str0,"cell e")==0)  obj0=celle
if (strcmp(str0,"cell f")==0)  obj0=cellf
if (strcmp(str0,"cell g")==0)  obj0=cellg
if (strcmp(str0,"cell h")==0)  obj0=cellh
if (strcmp(str0,"cell i")==0)  obj0=celli
if (strcmp(str0,"cell j")==0)  obj0=cellj
if (strcmp(str0,"cell k")==0)  obj0=cellk
if (strcmp(str0,"cell l")==0)  obj0=celll
if (strcmp(str0,"cell m")==0)  obj0=cellm
if (strcmp(str0,"cell m")==0)  obj0=celln
if (strcmp(str0,"cell o")==0)  obj0=cello
if (strcmp(str0,"cell p")==0)  obj0=cellp
} 

proc makeiclamp() {

m=m+1
cellobjname($s1)

obj0.soma {stimgui[m]=new IClamp(.5)}
stimgui[m].del=0
stimgui[m].dur=0
stimgui[m].amp=0

sprint(str3,"%s %s",$s1,"stim")
sprint(str0,"stimgui[%d].del",m)
sprint(str1,"stimgui[%d].dur",m)
sprint(str2,"stimgui[%d].amp",m)

xpanel(str3)
  xlabel(str3)
  xvalue("delay",str0)
  xvalue("duration",str1)
  xvalue("amplitude",str2)
xpanel()
} 

proc makegraph() {
str3=$s1
newPlot(0,tstop,-80,40)
graphItem.save_name("graphList[0].")
graphList[0].append(graphItem)  
graphItem.addexpr(str3)
}

proc newPlotFK() {
newPlot(0,tstop,-80,40)
graphItem.save_name("graphList[0].")
graphList[0].append(graphItem)
graphItem.addexpr("cell1.soma.v(.5)")
}

objref gr
strdef stationname
proc namestation(){
gr=new Graph()
gr.xaxis(3)
gr.yaxis(3)
string_dialog("Enter station name; when name box appears reduce and place at upper right of screen",stationname)
gr.label(.5,.5,stationname)
}

proc cancel(){objectvar s}



